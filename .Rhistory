matrix(1:6,2,3) %*% matrix(3:8,3,2)
1:3 %*% 1:3
matrix(1:9,3,3) %*% 1:3
matrix(1:4,2,2)
t(matrix(1:4,2,2))
diag(1,3)
x <- solve(A,b)
x
A %*% x
solve(A)
A %*% eigen(A)$vectors[,1] / eigen(A)$vectors[,1]
X <- cbind(x1 = 1, x2 = 1:10, x3 = sin(1:10))
x
beta <- c(0.5, -1, 4.3)
beta
x[,1]
x
X[,1]
X
X %*% c(0.5,-1,4.3)
exit()
play()
cat(facebook_error, sep ="\n")
cat(facebook_error, sep = "\n")
check_then_install("jsonlite", "0.9.19")
library(jsonlite)
vignette(package = "jsonlite")
vignette("json-aaquickstart", "jsonlite")
youbike1 <- fromJSON(youbike_path)
hospital_path
readBin(hospital_path, "raw", n = 3L)
library(playr)
library(plyr)
dd <- data.frame(matrix(round(rnorm(216),2),72,3),c(rep("A",24),rep("B",24),
rep("C",24)),c(rep("J",36),rep("K",36)))
View(dd)
c(rep("A",24)
)
rnorm(216)
?rnor,
?rnorm
plot(rnorm(216))
plot(rnorm(216))
plot(rnorm(216,mean = 4))
plot(rnorm(2160))
plot(rnorm(2160,mean = 4))
plot(rnorm(2160,mean = 4,sd=0))
plot(rnorm(2160,mean = 4,sd=1))
plot(rnorm(2160,mean = 4,sd=2))
plot(rnorm(2160,mean = 4,sd=100))
plot(rnorm(2160,mean = 4,sd=100000))
plot(rnorm(2160,mean = 4,sd=10))
colnames(dd) <- c("v1","v2","v3","dim1","dim2")
dd
head(dd)
ddply(dd,c("dim1","dim2"),function(df)mean(df$v1))
ddply(dd,c("dim1","dim2"),summarize,V1 = mean(v1))
die <- c(1,2,3,4,5,6)
die
five
fiv <- 5
five
five <- 5
five
length(fiv)
length(five)
int <- 1L
int
text <- "ace"
text
int <-c(1L,5L)
sum(int)
sum(text)
sqrt(2)^2 -2
attributes(die)
names(die)
names(die) <- c("one","two","three","four","five","six")
names
die <- c(1,2,3,4,5,6)
names(die) <- c("one","two","three","four","five","six")
names
attributes(die)
die
names(die) <- NULL
die
names(die) <- c("one","two","three","four","five","six")
die
dim(die) <- c(2,3)
die
dim(die)<- c(3,2)
die
m <- matrix(die,nrow=2)
m
m <- matrix(die,nrow=2,byrow = TRUE)
m
ar <- array(c(11:14,21:24,31:34),dim = c(2,2,3))
ar
hand1 <- array(c("ace","king","queen","jack","ten","spades","spades","spades","spades","spades"),dim = c(5,2))
hand1
hand <- c("ace","king","queen","jack","ten","spades","spades","spades","spades","spades")
hand <- array(c("ace","king","queen","jack","ten","spades","spades","spades","spades","spades"),dim = c(5,2))
hand
hand1 <- c("ace","king","queen","jack","ten","spades","spades","spades","spades","spades")
matrix(hand1,nrow = 5)
hand1 <- c("ace","king","queen","jack","ten","spades","spades","spades","spades","spades")
matrix(hand1,nclo = 2)
matrix(hand1,ncol = 2)
hand1 <- c("ace","king","queen","jack","ten","spades","spades","spades","spades","spades")
dim(hand1) <- c(5,2)
hand1
hand2 <- c("ace","spades","king","spades","queen","spades","jack","spades","ten","spades")
matrix(hand2,nrow = 5,byrow = TRUE)
hand2 <- c("ace","spades","king","spades","queen","spades","jack","spades","ten","spades")
matrix(hand2,nrow = 5)
matrix(hand2,nrow = 5,byrow = TRUE)
class(die)
attributes(die)
class(hand2)
class(hand1)
attributes(hand2)
attributes(hand1)
now <- Sys.time()
now
typeof(now)
class(now)
unclass(now)
mil <- 1000000
mil
class(mil) <- c("POSIXct","POSIXt")
mil
gender <- factor(c("male","female","female","male"))
typeof(gender)
attributes(gender)
unclass(gender)
as.character(gender)
card <- c("ace","hearts",1)
card
sum(c(TRUE,TRUE,FALSE,FALSE))
as.character(1)
as.logical(1)
as.numeric(FALSE)
list1 <- list(100:130,"R",list(TRUE,FALSE))
list1
list1[[1]]
list1[[1]][1]
list1[[2]]
list2 <- list(1,"spades","ace")
list2
list2[[1]]
df <- data.frame(face=c("ace","two","three"),suit=c("clubs","clubs","clubs"),value=c(1,2,3))
df
df <- data.frame(face=c("ace","two","three"),suit=c("clubs","clubs","clubs"),value=c(1,2))
df <- data.frame(face=c("ace","two","three"),suit=c("clubs","clubs","clubs"),value=c(1,2,3))
df
typeof(df)
class(df)
str(df)
deck <- read.csv("C:/Users/Start-Up/Desktop/R_shortcode/deck.csv")
View(deck)
head(deck)
tail(deck)
getwd()
write.csv(deck, file= "cards.csv",row.names = FALSE)
deal(deck)
deck[0,0]
deck
deck[0,0]
deck[1,1]
head(deck)
deck[1,c(1,2,3)]
deck[1,]
new <- deck[1,c(1,2,3)]
new
deck[c(1,1),c(1,2,3)]
vec <- c(6,1,3,6,10,5)
vec[1:3]
deck[c(1,2),c(1,2)]
deck[1:2,1]
deck[1:2,1,drop = FALSE]
deck[-(2:52),1:3]
deck[c(-1,1),1:3]
deck[1,]
deck[,"value"]
deal <- function(cards){
cards[1,]
}
deal(deck)
deal(deck)
deal(deck)
deck2 <- deck[1:52,]
head(deck2)
deck3 <- deck[c(2,1,3:52)]
deck3 <- deck[c(2,1,3:52),]
head(deck3)
random <- sample(1:52,size = 52)
random
deck4 <- deck[random,]
head(deck4)
shuffle <- function(cards){
random <- sample(1:52,size = 52)
cards <- cards[random,]
}
shuffle(cards)
deal(deck)
deck2 <- shuffle(deck)
deal(deck2)
deck$value
mean(deck$value)
median(deck$value)
lst <- list(numbers =c(1,2),logical =TRUE,strings=c("a","b","c"))
lst
lst[1]
sum(lst[1])
lst$numbers
sum(lst$numbers)
rm(list=ls(all=TRUE))
library(XML)
library(bitops)
library(RCurl)
library(NLP)
library(httr)
library(readr)
Sys.setlocale("LC_ALL", "cht")
govURL1 = 'http://www.post.gov.tw/post/internet/I_location/index.jsp?topage='
govURL2 = '&PreRowDatas=10&city=%E8%87%BA%E5%8C%97%E5%B8%82&input2=&st_7=&st_6=&is_night=&st_1_5=&zip5=&prsb_no=&city_area=%&ID=190105&post_address=&style=1&keyword=&Page_Load=1'
startPage =1
endPage = 1
alldata = data.frame()
for (i in startPage:endPage)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
for(i in 2:2)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
for(i in 3:3)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
for(i in 4:4)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
for(i in 5:5)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
for(i in 6:6)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
View(alldata)
for(i in 7:7)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
for(i in 8:8)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
for(i in 9:9)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
num = 10
for(i in num:num)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
num = 11
for(i in num:num)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
num = 12
for(i in num:num)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
num = 13
for(i in num:num)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
num = 14
for(i in num:num)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
num = 15
for(i in num:num)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
num = 16
for(i in num:num)
{
govURL = paste(govURL1,i,govURL2,sep = '')
urlExists = url.exists(govURL)
if(urlExists)
{
# If encoding error , than fetch from local files
# html = mystring <- read_file("star.txt",locale = default_locale())
html = getURL(govURL, ssl.verifypeer = FALSE,.encoding = "big5")
xml = htmlParse(html, encoding ='utf-8')
title = xpathSApply(xml, "//td[@class='detail_postname']", xmlValue)
address = xpathSApply(xml, "//td[@class='detail_address']",xmlValue)
tempdata = data.frame(title,address)
}
alldata = rbind(alldata, tempdata)
}
write.csv(alldata, 'taipei_post.csv')
df_post<- read.csv("post_taipei_full.csv",header = FALSE)
df_post<- read.csv("post_taipei_full.csv",header = FALSE)
setwd("C:/Users/Start-Up/Desktop/Rent_Analysis")
df_post<- read.csv("post_taipei_full.csv",header = FALSE)
df_star <- read.csv("star_taipei_full.csv",header = FALSE)
df_rtmart<- read.csv("rtmart_taipei_full.csv",header = FALSE)
df_cosmed<- read.csv("cosmed_taipei_full.csv",header = FALSE)
df_cafe85<- read.csv("cafe85_taipei_full.csv",header = FALSE)
df_post<- read.csv("post_taipei_full.csv",header = FALSE)
#載入租屋座標及點擊數量
df_rent<- read.csv("Address_taipei_full.csv",header = FALSE)
#載入座標
df_star <- read.csv("star_taipei_full.csv",header = FALSE)
df_rtmart<- read.csv("rtmart_taipei_full.csv",header = FALSE)
df_cosmed<- read.csv("cosmed_taipei_full.csv",header = FALSE)
df_cafe85<- read.csv("cafe85_taipei_full.csv",header = FALSE)
df_post<- read.csv("post_taipei_full.csv",header = FALSE)
#載入租屋座標及點擊數量
df_rent<- read.csv("Address_taipei_full.csv",header = FALSE)
